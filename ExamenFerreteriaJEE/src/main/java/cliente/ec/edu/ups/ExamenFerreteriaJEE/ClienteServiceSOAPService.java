package cliente.ec.edu.ups.ExamenFerreteriaJEE;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.11
 * 2021-02-05T11:10:48.999-05:00
 * Generated source version: 2.7.11
 * 
 */
@WebServiceClient(name = "ClienteServiceSOAPService", 
                  wsdlLocation = "/var/folders/vx/jt8jmvv16sldpy13s917vzyw0000gn/T/tempdir7518696466327899993.tmp/ClienteServiceSOAP_1.wsdl",
                  targetNamespace = "http://service.ExamenProveedor1JEE.ups.edu.ec/") 
public class ClienteServiceSOAPService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.ExamenProveedor1JEE.ups.edu.ec/", "ClienteServiceSOAPService");
    public final static QName ClienteServiceSOAPPort = new QName("http://service.ExamenProveedor1JEE.ups.edu.ec/", "ClienteServiceSOAPPort");
    static {
        URL url = ClienteServiceSOAPService.class.getResource("/var/folders/vx/jt8jmvv16sldpy13s917vzyw0000gn/T/tempdir7518696466327899993.tmp/ClienteServiceSOAP_1.wsdl");
        if (url == null) {
            url = ClienteServiceSOAPService.class.getClassLoader().getResource("/var/folders/vx/jt8jmvv16sldpy13s917vzyw0000gn/T/tempdir7518696466327899993.tmp/ClienteServiceSOAP_1.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(ClienteServiceSOAPService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "/var/folders/vx/jt8jmvv16sldpy13s917vzyw0000gn/T/tempdir7518696466327899993.tmp/ClienteServiceSOAP_1.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public ClienteServiceSOAPService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ClienteServiceSOAPService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClienteServiceSOAPService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ClienteServiceSOAPService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ClienteServiceSOAPService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ClienteServiceSOAPService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ClienteServiceSOAP
     */
    @WebEndpoint(name = "ClienteServiceSOAPPort")
    public ClienteServiceSOAP getClienteServiceSOAPPort() {
        return super.getPort(ClienteServiceSOAPPort, ClienteServiceSOAP.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClienteServiceSOAP
     */
    @WebEndpoint(name = "ClienteServiceSOAPPort")
    public ClienteServiceSOAP getClienteServiceSOAPPort(WebServiceFeature... features) {
        return super.getPort(ClienteServiceSOAPPort, ClienteServiceSOAP.class, features);
    }

}
